version: 2
publish: &publish
  working_directory: ~/circle
  docker:
    - image: circleci/node:10.4.1
  steps:
    - checkout

    - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

    # - run:
    #     name: Installing dependencies
    #     command: npm install

    - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

    # - run:
    #     name: Installing Expo CLI
    #     command: sudo npm install -g expo-cli

    # - run:
    #     name: Login into Expo
    #     command: expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD --non-interactive

    #- run:
    #    name: Build android
    #    command: expo build:android --no-publish --non-interactive

    - run:
        name: Downloading built apk
        #command: curl -o app.apk "$(expo url:apk)"
        command: curl -o app.apk https://exp-shell-app-assets.s3.us-west-1.amazonaws.com/android/%40saturn812/circle-1fba5c35f6dd475db5339dccbf8cafbd-signed.apk

    - run:
        name: Uploading to DeployGate
        command: |
          echo ${DEPLOY_GATE_TOKEN}
          echo ${DEPLOY_GATE_USERNAME}
          curl -F "token=${DEPLOY_GATE_TOKEN}" -F "file=./app.apk" -F "message=Release 1.0.0" https://deploygate.com/api/users/${DEPLOY_GATE_USERNAME}/apps

dependencies:
  cache_directories:
    - ~/nvm/v0.10.4/bin
    - ~/nvm/v0.10.4/lib/node_modules

jobs:
  publish_to_expo_dev:
    environment:
      EXPO_RELEASE_CHANNEL: dev
    <<: *publish

  publish_to_expo_prod:
    environment:
      EXPO_RELEASE_CHANNEL: default
    <<: *publish

workflows:
  version: 2
  my_app:
    jobs:
      - publish_to_expo_dev:
          filters:
            branches:
              only: development
      - publish_to_expo_prod:
          filters:
            branches:
              only: production
